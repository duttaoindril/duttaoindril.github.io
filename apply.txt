Trunk
4 Flitch, 4 Nails, 5 Simple Parts

Oindril Dutta | 3.204 | 2.93
Learn in order: Go | Rust | Scala | Kotlin | C#
--

Developed and maintained existing GitHub repository codebases and servers of internal tools used by the DB2 department.
Fleshed them out and updated them to work with newer technologies and frameworks.
A notable example of such an internal tool I worked on is a chatbot that queries the Retain API, and can show or modify data as handled by that API.

~~~

Implemented and deployed multi-dependent application tools suite to production for IBMâ€™s DB2 Database Support Management Systems, allowing for easy integration with Salesforce over legacy Retain database systems.

- Refactored entire 80k+ line application across 12 repositories to allow in-sync builds with each other, saving ~500 man-hours per month of development and build time
- Created a continuous integration system utilizing Jenkins, with an entire testing suite, to automatically test, push and revert development and production builds
- Fixed 2500+ runtime and compilation bugs involving Gradle, Beans, namespacing, DRY code, logic errors, and class, packaging, and method issues

Used Java, JUnit, Jenkins, Git, Tomcat, Agile.

--

Summer Engineering Fellow/Intern at Aeris; I worked on data analysis, data stream decoding, and app creation in multiple platforms such as R, Shiny, Polymer, and Android. I built multiple internal tools to do the data analysis and decoding, culminating in a Polymer app that ingests real time IOT data from car sensors and then displays their analytics. This app was then used in a live demo at an investor showcase.

~~~

FILL IN

--

Developed from scratch a Rails e-commerce site to advertise/sell SAT II Chem classes.

--

Strong Full Stack Developer dipping toes into AI/ML/Data Handling

Hey! I'm Oindril. I'm a strong Full Stack Developer (frontend + backend) highly interested in AI/ML and Data. I'm looking for a fulltime position where I can have a positive and long-lasting positive impact on the company, as I have done in my previous internships.

http://odutta.me

http://linkedin.com/in/oindrildutta

http://github.com/duttaoindril

--

Bachelor of Science in Computer Science

--

I think that technology has one simple role in society: Improvement. As such, if technology can make something new that leads to improvement, or replaces something that results in an improvement, then it's good, great, awesome. That's why I want to work in technology, it's the most fun way I know I can contribute to society's improvement, assuming societal improvement is an overall rise of happiness in the global population. Thus for me, future innovations represent newer, more fun and more exciting ways to improve society, giving me an excuse (I would do it anyway) to enjoy learning about these new technologies and maybe even being privileged enough to work with them, a good example of such a new technology being ML. The job market of the tech industry, like the massive unorganized system it is, make it very difficult to get across this enthusiasm to work with technology to improve, and I hope by writing this here I am getting it across. On the note of jobs, I thought I was ready for the by the time I started college, and maybe by my performance in my internships, I could say I was right. However, if there was any value I gained from my college degree, it's that there's a lot of exciting things to learn about, and it's even more exciting to apply them after learning them. In that sense, my college definitely has prepared me, giving me an idea of how much responsibility weighs.

--

I'm pretty good and polished at web development, front-end and backend (servers/nosql databases), and that's because I enjoy programming and I want to show off my logic and ideas. Web Dev has been the easiest way to get that across. On that note, what I actually enjoy doing is the stuff in the back, such as data handling/processing, all the logic of how to interpret that data, etc. I really want to get better at traditional SQL databases (I'm very proficient in NoSQL databases) and I want to really dive deep into ML, especially after having made some of my own projects with ML.

--

Two of my most challenging projects were semester long coding projects that really let me dive deep and focus on code and implementation and learning and working together in a team.

The first project was an online store for groceries, and it was a fully functional website client built with Polymer and a Node.JS server back-end; I focused heavily on the server-client implementation and the front-end using the framework.

The second project was much more profound, I made an app that can use any camera on any device to tell you how well you're doing any (three) yoga pose. I used a machine learning server running Tensorflow and other code to return confidences for webcam input from the client. Me and my team made an entire pipeline that allowed us to simply put in a few YouTube URLs and timestamps, and a server would extract all the frames from that video label them, run a program called Openpose on them that gets skeleton key points of a human body, and then we did a bit of math to convert those pixel key points to standardized angles, magnitudes, etc. All that is then fed into a simple Neural network, trained on the extracted and standardized data of around a few thousand frames, all doing 4 different things: Warrior II, Tree, Triangle, or no pose. The model was trained and then ran on the back-end Node.JS server, and when anybody opened the React.JS client, it would start sending frames to the server for running Openpose and the model prediction and then returned confidences of how well each pose was being done on the client.

I'm very proud of both of these projects; I worked my best to show something that is truly polished, and working on them pushed me to not just learn, implement and push my limits on something that I've never done before on my own, but to also share this experience with others and teach them how to do some things and then get taught a few things, eventually all working together to make awesome ideas come to life.

--

These are the projects I describe here because they're the ones I've spent a lot of time on, in a team. I have many other side projects that I've only worked on for a couple days to a few weeks, from hackathons and my own ideas, and you can find out about them on my resume and website: http://odutta.me/resume.pdf & http://odutta.me

--

My dream since I started programming in high school has been to simply code to make the world a better place, to bring and spread smiles to the world. OpenDoor really aligns with that vision, and I would be so happy to work towards goals that truly benefit the world.

--

I may not have all the skills I need to do this job, but I want to say that I love to learn and I learn quickly and I learn well; I would be very excited to learn any technology/stack/language/tool on the job and do something awesome with it; it's one of the things I'm most eager to do as a computer scientist, programmer, and developer.

--

My Projects

Eyeshot.fun (Global Grid)
Yoga Master
React.js chat App


--

Companies Already Applied To
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NVIDIA
Visa
Applied Materials
Essential Products
Palantir Technologies
Yelp
ARRIS Group
Affirm
Axcient
Ciena
Egnyte
Ellie Mae
IXL Learning
Nutanix
Opendoor
Proofpoint
Quip
Salesforce
Shutterfly
Splunk
The Climate Corp
Veeva Systems
VMWare
Everlaw

Companies to Apply To
~~~~~~~~~~~~~~~~~~~~~
Apple
Microsoft
Amazon
Facebook
Workday
Cisco
ServiceNow
Twitter
Google
Zillow
Redfin
Fortinet - Should I apply here?
Intel Corporation - Should I apply here? DevOps Engineer for Computing Hub; HPC Storage Analytics and Support Engineer
Mozilla Foundation - Should I apply here? Android Mobile Engineer (New College Grad)

Places to Apply From
~~~~~~~~~~~~~~~~~~~~
Hired.com
Dice.com
Glassdoor.com
LinkedIn.com
Monster.com
Angellist.com

Avoid
~~~~~
PWC
IBM
Microsoft
Deloitte
Accenture
Satyam Mahendra
Cognizant Tech Solutions [CTS]
Tata Consulting Service [TCS]
Infosys
Saama
Cybercoders
Robert Half Tech

--

Positions that want what Babi wants:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
https://jobs.lever.co/opendoor/28f6a3d0-7074-433b-bbf3-ff382c2296f9
https://jobs.lever.co/opendoor/3cc9a9cd-2b67-4061-99ab-c459d8a87b61
https://www.egnyte.com/jobs/jobs.html#software-engineer-infra-development
https://jobs.jobvite.com/shutterflyinc/job/oYzg7fwE
https://jobs.jobvite.com/shutterflyinc/job/og0Q7fwX
https://jobs.lever.co/elliemae/4c2782a9-9b59-4bd0-9c29-500484e5e8dd
https://careers.vmware.com/job/palo-alto/openstack-kubernetes-engineering/1567/7142959

==================================================

Core:
---
Java
Python
Ruby
C++
-
Scala
Perl
Objective C
Shell Scripting
PowerShell


Machine Learning:
---
Python
R
-
Tableau - Visualization Tool
Looker - Visualization Tool
TIBCO
AI
Random forest
data mining
Data Analytics
information retrieval - NLP
ARIMA
SVR
machine learning
Matlab
LabVIEW
Data Science
Big Data Analytics


Front End Web Dev:
---
HTML5
CSS3
ES6
JavaScript
Node.js
Express.js
HTML
REST
JSON
React.JS
Redux
Ajax
Polymer
Responsive Design
Material Design
Web APIs
WebSockets
Local Storage
Flask
Django
Apache Tomcat
XML
XUL - XML User Interface Language 
-
Spring - Java Framework
Spring Boot - Quickstart Spring Apps
Typescript.js
Webpack
Redux-Saga
Prototype JS Library - JS Testing Library
Jasmine/Karma - Node/Browser testing
Protractor - Angular Testing
Jersey - JAX-RS Wrapper
JAX-RS - Java API for RESTful Web Services
JAXB - Java Architecture for XML Binding
JMS - java message service
Angular.js
Backbone.js
Handlebars.js
Underscore.js
Require.js
JQuery
Sass + Mixins
LESS
Bootstrap
Mocking Frameworks
Wireframing Tools
GSAP - JS HTML5 Animations - GreenSock Animation Platform
RSS/Atom Web Feeds
Ruby on Rails
Struts - Java Framework
LAMP - PHP Framework
Laravel - PHP Framework
Symfony - PHP Framework
CakePHP - PHP Framework
Zend - PHP Framework
SiteMinder
Jetty - Java Servlet Engine and Http Server
GlassFish - Java application server project
JSP - Java Framework
Drupal
SiteMinder SSO
CMSs
Sitecore
Swagger
XPath - XML Query Language
RESTful API Modeling Language (RAML)
WADL - Web Application Description Language
WSDL - Web Services Description Language


Operating Systems:
---
-
Cloud Computing


Systems/Architechture/Infrastructure: 
---
Node.js
Flask
Django
Java
Jenkins
Apache Tomcat
C#
-
Junit
travis
Kubernetes
Docker - build, ship, and run distributed applications
IOC/DI - DI is a subset of IoC; Inversion of Control - Dependency Injection
CircleCI - Continuous Integration and Delivery
Terraform by HashiCorp - Enables you to safely and predictably create, change, and improve infrastructure
Stream processing frameworks
Apache Spark Streaming
Kafka
Kafka message queue
Azure
AWS
Maven
Gradle
J2EE - Java 2 Platforms, Enterprise Edition
JEE
Apache
Visual Basic
IBM WebSphere (MQ) - IBM's AWS/Azure
OracleSQL
Oracle WebLogic Server
Oracle
TIBCO
JBoss or other application runtimes and ESBs
Micro Service Architecture
Apache Webservice


Databases/Storage Systems:
---
JavaScript
Node.js
Java
XML
XUL - XML User Interface Language 
JSON
Flask
Django
Apache
REST
Mongo DB
RDBMS - Relational Database Management System
-
JDBC - Java DB Connect
Azure
AWS
Cassandra
Hadoop Eco System
Hibernate
Oracle
Presto | Distributed SQL Query Engine for Big Data
HDFS - High Density File Storage
Apache Solr - Search Tool
map reduce - Algorithms
data mining
Kibo
PostgreSQL
MS SQL Server


Security:
---
Apache
-


Native:
---
C#
-
C
Android
UIKit
Cocoa
iOS
Objective C
Swift
Eclipse
Visual Studio
ASP.NET MVC
VB.NET
.Net
.NET Core
.Net Framework
WCF


Other:
---
NPM
Github
Git
Java Beans - Stupid Java Standard
Agile
Software Design
SDLC - software development life cycle
New Development
-
Kubernetes
Docker
Maven
Bower
Grunt
Gulp
Gradle
A|B Test Design
SonarQube
Salt Testing Suite
Chef
Ansible
Puppet - Automation Tech
RSS/Atom Web Feeds
Elastic - Elasticsearch, Kibana, Beats, Logstash - Elastic Stack for search & analytics
Apache Solr - Search Tool
XSLT - Transform XML to documents (HTML, PDF, etc)
Apache Subversion - Apache's Git
Big Data Analytics
SOA - Service Oriented Architecture
SOAP - Simple Object Access Protocol


==================================================

Watching + Downloading Anime:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
twist.moe
masterani.me
animeheaven.eu
www6.9anime.is
rabb.it
gogoanime.in
animepahe.com
animeheaven.eu
animeseries.co
Watchcartoononline.io
Streamanime.tv
anilinkz.to

Downloading Anime:
~~~~~~~~~~~~~~~~~~
kametsu.com
animencodes.com
reddit.com/r/megalinks
anime.thehylia.com/downloads/browse/all 
animekaizoku.com
project-gxs.com
animeworldbd.com
animeout.xyz
hi10anime.com
nyaa.si
animetosho.org
horriblesubs.info
coalgirls.wakku.to

bakabt.me ???




8. CardinalHire
9. DJI
10. SOLEÂ® Financial
11. Vendition
12. Joey @ Infosys




Coinbase âœ“ âœ“
400+
$5.3 billion
San Francisco, CA

OpenDoor âœ“ âœ“
$600 million
San Francisco
angular, react, go, react native, python
opendoor.com

GiveCampus âœ“ âœ“
10+
SF
ruby on rails, react, redis, postgres
givecampus.com

SterBlue âœ“ âœ“
10+
San Francisco, California
node js, react, react native, graphql, python, tensorflow, pytorch, docker, kubernetes, aws lambda
sterblue.com

Swayable âœ“ âœ“
5+
San Francisco, California
node.js, vue.js, mongodb, python, celery, redis, numpy, scipy

Uncountable âœ“ âœ“
5+
San Francisco
pytorch, react
uncountable.com